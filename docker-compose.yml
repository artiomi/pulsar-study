version: '3'
networks:
  pulsar:
    driver: bridge
services:
  # Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    container_name: zookeeper
    restart: no
    networks:
      - pulsar
    volumes:
      - /D/data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - PULSAR_MEM=-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

  # Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    networks:
      - pulsar
    command: >
      bin/pulsar initialize-cluster-metadata \
               --cluster cluster-a \
               --zookeeper zookeeper:2181 \
               --configuration-store zookeeper:2181 \
               --web-service-url http://broker:8080 \
               --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

  # Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    container_name: bookie
    restart: no
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
#      - metadataServiceUri=zk://zookeeper:2181/ledgers # used for stateful functions
      # otherwise every time we run docker compose uo or down we fail to start due to Cookie
      # See: https://github.com/apache/bookkeeper/blob/405e72acf42bb1104296447ea8840d805094c787/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java#L57-68
      - advertisedAddress=bookie
      - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
      # configurations for stateful functions
#      - PULSAR_PREFIX_storageserver.grpc.port=4181
#      - PULSAR_PREFIX_dlog.bkcEnsembleSize=1
#      - PULSAR_PREFIX_dlog.bkcWriteQuorumSize=1
#      - PULSAR_PREFIX_dlog.bkcAckQuorumSize=1
#      - PULSAR_PREFIX_storage.range.store.dirs=data/bookkeeper/ranges
#      - PULSAR_PREFIX_storage.serve.readonly.tables=false
#      - PULSAR_PREFIX_storage.cluster.controller.schedule.interval.ms=30000
#      - PULSAR_PREFIX_extraServerComponents=org.apache.bookkeeper.stream.server.StreamStorageLifecycleComponent
    ports:
      - "4181:4181"
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    volumes:
      - /D/data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

  # Start broker
  broker:
    image: apachepulsar/pulsar:latest
    container_name: broker
    hostname: broker
    restart: no
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://127.0.0.1:6650
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
      - functionsWorkerEnabled=true
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    volumes:
      - /d/downloads/pulsar-io-jdbc-postgres-3.0.0.nar:/pulsar/connectors/pulsar-io-jdbc-postgres-3.0.0.nar
      - ./connector/config/:/pulsar/connectors/config/
#      - ./config/functions_worker.yml:/pulsar/conf/functions_worker.yml # bk configurations for stateful functions
#      - ./functions/func_config:/pulsar/my_functions/configs
#      - ./functions/target/functions-1.0.jar:/pulsar/my_functions/functions-1.0.jar
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"

  manager:
    image: apachepulsar/pulsar-manager:latest
    container_name: manager
    hostname: manager
    networks:
      - pulsar
    environment:
      - SPRING_CONFIGURATION_FILE=/pulsar-manager/pulsar-manager/application.properties
    ports:
      - "9527:9527"
      - "7750:7750"
    restart: no
    depends_on:
      - broker

# for connectors test use postgres
  postgres:
    image: postgres:12
    container_name: postgres
    hostname: postgres
    networks:
      - pulsar
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
    ports:
      - "5432:5432"
    restart: no
    volumes:
      - /D/data/postgresql:/var/lib/postgresql/data